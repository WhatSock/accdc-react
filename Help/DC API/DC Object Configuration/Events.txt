Description: Event properties can be set to handle standard interactions.

Note: When set, events are bound to DC.outerNode. Each property may be set declaratively when creating new DC objects, or directly by modifying individual properties on instantiated DC objects.

Declarative Syntax

{
  EventName1: Function1,
  EventName2: Function2
  // Etc.
}

Direct Syntax

DC.EventName = Function;

DC Object Properties

Note: When omitted, no event is added to DC.outerNode. All event names when declared must be in camel case.

click: function(event, DC) {   }

dblClick: function(event, DC) {   }

mouseOver: function(event, DC) {   }

mouseOut: function(event, DC) {   }

mouseDown: function(event, DC) {   }

mouseUp: function(event, DC) {   }

mouseMove: function(event, DC) {   }

mouseEnter: function(event, DC) {   }

mouseLeave: function(event, DC) {   }

keyDown: function(event, DC) {   }

keyUp: function(event, DC) {   }

focusIn: function(event, DC) {   }

focusOut: function(event, DC) {   }

resize: function(event, DC) {   }

scroll: function(event, DC) {   }

Special Events

// Assign a handler to execute when tabbing forward out of a DC object.
// Requires that both DC.exposeHiddenClose and DC.displayHiddenClose are set to true.
  tabOut: function(event, DC) {   }

// Set a timer in milliseconds before running a timeout function.
// The timer starts counting down when the DC object is rendered.
  timeoutVal: 0

// Assign a handler to execute when the timer runs out of time.
  timeout: function(DC) {   }